<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="EncryptedAppDataSet" targetNamespace="http://tempuri.org/EncryptedAppDataSet.xsd" xmlns:mstns="http://tempuri.org/EncryptedAppDataSet.xsd" xmlns="http://tempuri.org/EncryptedAppDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="EncryptedAppConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="EncryptedAppConnectionString (Settings)" PropertyReference="ApplicationSettings.DesktopAppProiectCripto.Properties.Settings.GlobalReference.Default.EncryptedAppConnectionString" Provider="System.Data.OleDb" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="EncryptedTextsTableAdapter" GeneratorDataComponentClassName="EncryptedTextsTableAdapter" Name="EncryptedTexts" UserDataComponentName="EncryptedTextsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="EncryptedAppConnectionString (Settings)" DbObjectName="EncryptedTexts" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM `EncryptedTexts` WHERE ((`ID` = ?) AND ((? = 1 AND `EncryptedTexts` IS NULL) OR (`EncryptedTexts` = ?)) AND ((? = 1 AND `Key` IS NULL) OR (`Key` = ?)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_ID" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_EncryptedTexts" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="EncryptedTexts" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Original_EncryptedTexts" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="EncryptedTexts" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_Key" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="Key" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Original_Key" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="Key" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO `EncryptedTexts` (`EncryptedTexts`, `Key`) VALUES (?, ?)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="EncryptedTexts" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="EncryptedTexts" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Key" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="Key" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ID, EncryptedTexts, [Key] FROM EncryptedTexts</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE `EncryptedTexts` SET `EncryptedTexts` = ?, `Key` = ? WHERE ((`ID` = ?) AND ((? = 1 AND `EncryptedTexts` IS NULL) OR (`EncryptedTexts` = ?)) AND ((? = 1 AND `Key` IS NULL) OR (`Key` = ?)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="EncryptedTexts" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="EncryptedTexts" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Key" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="Key" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_ID" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_EncryptedTexts" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="EncryptedTexts" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Original_EncryptedTexts" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="EncryptedTexts" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_Key" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="Key" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Original_Key" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="Key" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID" DataSetColumn="ID" />
              <Mapping SourceColumn="EncryptedTexts" DataSetColumn="EncryptedTexts" />
              <Mapping SourceColumn="Key" DataSetColumn="Key" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="PlainTextsTableAdapter" GeneratorDataComponentClassName="PlainTextsTableAdapter" Name="PlainTexts" UserDataComponentName="PlainTextsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="EncryptedAppConnectionString (Settings)" DbObjectName="PlainTexts" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM `PlainTexts` WHERE ((`ID` = ?) AND ((? = 1 AND `PlainText` IS NULL) OR (`PlainText` = ?)) AND ((? = 1 AND `Key` IS NULL) OR (`Key` = ?)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_ID" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_PlainText" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="PlainText" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Original_PlainText" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="PlainText" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_Key" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="Key" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Original_Key" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="Key" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO `PlainTexts` (`PlainText`, `Key`) VALUES (?, ?)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="PlainText" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="PlainText" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Key" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="Key" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ID, PlainText, [Key] FROM PlainTexts</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE `PlainTexts` SET `PlainText` = ?, `Key` = ? WHERE ((`ID` = ?) AND ((? = 1 AND `PlainText` IS NULL) OR (`PlainText` = ?)) AND ((? = 1 AND `Key` IS NULL) OR (`Key` = ?)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="PlainText" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="PlainText" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Key" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="Key" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_ID" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_PlainText" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="PlainText" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Original_PlainText" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="PlainText" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_Key" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="Key" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Original_Key" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="Key" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID" DataSetColumn="ID" />
              <Mapping SourceColumn="PlainText" DataSetColumn="PlainText" />
              <Mapping SourceColumn="Key" DataSetColumn="Key" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="EncryptedAppDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_UserDSName="EncryptedAppDataSet" msprop:Generator_DataSetName="EncryptedAppDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="EncryptedTexts" msprop:Generator_RowEvHandlerName="EncryptedTextsRowChangeEventHandler" msprop:Generator_RowDeletedName="EncryptedTextsRowDeleted" msprop:Generator_RowDeletingName="EncryptedTextsRowDeleting" msprop:Generator_RowEvArgName="EncryptedTextsRowChangeEvent" msprop:Generator_TablePropName="EncryptedTexts" msprop:Generator_RowChangedName="EncryptedTextsRowChanged" msprop:Generator_RowChangingName="EncryptedTextsRowChanging" msprop:Generator_TableClassName="EncryptedTextsDataTable" msprop:Generator_RowClassName="EncryptedTextsRow" msprop:Generator_TableVarName="tableEncryptedTexts" msprop:Generator_UserTableName="EncryptedTexts">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="ID" msprop:Generator_ColumnPropNameInTable="IDColumn" msprop:Generator_ColumnVarNameInTable="columnID" msprop:Generator_UserColumnName="ID" type="xs:int" />
              <xs:element name="EncryptedTexts" msprop:Generator_ColumnPropNameInRow="EncryptedTexts" msprop:Generator_ColumnPropNameInTable="EncryptedTextsColumn" msprop:Generator_ColumnVarNameInTable="columnEncryptedTexts" msprop:Generator_UserColumnName="EncryptedTexts" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Key" msprop:Generator_ColumnPropNameInRow="Key" msprop:Generator_ColumnPropNameInTable="KeyColumn" msprop:Generator_ColumnVarNameInTable="columnKey" msprop:Generator_UserColumnName="Key" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="PlainTexts" msprop:Generator_RowEvHandlerName="PlainTextsRowChangeEventHandler" msprop:Generator_RowDeletedName="PlainTextsRowDeleted" msprop:Generator_RowDeletingName="PlainTextsRowDeleting" msprop:Generator_RowEvArgName="PlainTextsRowChangeEvent" msprop:Generator_TablePropName="PlainTexts" msprop:Generator_RowChangedName="PlainTextsRowChanged" msprop:Generator_RowChangingName="PlainTextsRowChanging" msprop:Generator_TableClassName="PlainTextsDataTable" msprop:Generator_RowClassName="PlainTextsRow" msprop:Generator_TableVarName="tablePlainTexts" msprop:Generator_UserTableName="PlainTexts">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="ID" msprop:Generator_ColumnPropNameInTable="IDColumn" msprop:Generator_ColumnVarNameInTable="columnID" msprop:Generator_UserColumnName="ID" type="xs:int" />
              <xs:element name="PlainText" msprop:Generator_ColumnPropNameInRow="PlainText" msprop:Generator_ColumnPropNameInTable="PlainTextColumn" msprop:Generator_ColumnVarNameInTable="columnPlainText" msprop:Generator_UserColumnName="PlainText" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Key" msprop:Generator_ColumnPropNameInRow="Key" msprop:Generator_ColumnPropNameInTable="KeyColumn" msprop:Generator_ColumnVarNameInTable="columnKey" msprop:Generator_UserColumnName="Key" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:EncryptedTexts" />
      <xs:field xpath="mstns:ID" />
    </xs:unique>
    <xs:unique name="PlainTexts_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:PlainTexts" />
      <xs:field xpath="mstns:ID" />
    </xs:unique>
  </xs:element>
</xs:schema>